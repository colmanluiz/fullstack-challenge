services:
  # API Gateway
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/api-gateway/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      # JWT Configuration
      - JWT_SECRET=8c98d8aa398d58ef0629bdb88b7e859d
      - JWT_EXPIRES_IN=15m
      # Auth Service Configuration
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=3002
      # Tasks Service Configuration
      - TASKS_SERVICE_HOST=tasks-service
      - TASKS_SERVICE_PORT=3003
      # Notifications Service Configuration
      - NOTIFICATIONS_SERVICE_HOST=notifications-service
      - NOTIFICATIONS_SERVICE_TCP_PORT=3006
      # Rate Limiting
      - THROTTLE_TTL=60000
      - THROTTLE_LIMIT=10
    depends_on:
      - db
      - rabbitmq
      - auth-service
      - tasks-service
      - notifications-service
    networks:
      - challenge-network

  # Auth Service
  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
      target: development
    ports:
      - "3002:3002"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/auth-service/node_modules
    environment:
      - NODE_ENV=development
      - MICROSERVICE_PORT=3002
      # JWT Configuration
      - JWT_SECRET=8c98d8aa398d58ef0629bdb88b7e859d
      - JWT_EXPIRES_IN=15m
      # Database Configuration
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=challenge_db
    depends_on:
      - db
    networks:
      - challenge-network

  # Tasks Service
  tasks-service:
    container_name: tasks-service
    build:
      context: .
      dockerfile: ./apps/tasks-service/Dockerfile
      target: development
    ports:
      - "3003:3003"
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/tasks-service/node_modules
    environment:
      - NODE_ENV=development
      - MICROSERVICE_PORT=3003
      # Database Configuration
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=challenge_db
      # Auth Service Configuration
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=3002
      # RabbitMQ Configuration
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - TASKS_SERVICE_QUEUE=task_events
    depends_on:
      - db
      - rabbitmq
      - auth-service
    networks:
      - challenge-network

  # Notifications Service
  notifications-service:
    container_name: notifications-service
    build:
      context: .
      dockerfile: ./apps/notifications-service/Dockerfile
      target: development
    ports:
      - "3004:3004"
      - "3006:3006" # TCP port for API Gateway communication
    volumes:
      - .:/app
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/notifications-service/node_modules
    environment:
      - NODE_ENV=development
      - NOTIFICATIONS_SERVICE_HOST=0.0.0.0
      - NOTIFICATIONS_SERVICE_PORT=3004
      - NOTIFICATIONS_SERVICE_TCP_PORT=3006
      # Database Configuration
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=challenge_db
      # RabbitMQ Configuration
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - NOTIFICATIONS_SERVICE_QUEUE=task_events
      # Frontend Configuration
      - FRONTEND_URL=http://localhost:3000
      # JWT Configuration
      - JWT_SECRET=8c98d8aa398d58ef0629bdb88b7e859d
      # Logging
      - LOG_LEVEL=debug
    depends_on:
      - db
      - rabbitmq
    networks:
      - challenge-network

  # PostgreSQL Database
  db:
    image: postgres:17.5-alpine3.21
    container_name: challenge_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: challenge_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - challenge-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: challenge_rabbitmq
    restart: always
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - challenge-network

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  challenge-network:
    driver: bridge
